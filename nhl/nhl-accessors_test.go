// Copyright 2017 The go-github AUTHORS. All rights reserved.
//
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by gen-accessors; DO NOT EDIT.
// Instead, please run "go generate ./..." as described here:
// https://github.com/google/go-github/blob/master/CONTRIBUTING.md#submitting-a-patch

package nhl

import "testing"

func TestPlayer_GetBirthCity(tt *testing.T) {
	p := &Player{}
	p.GetBirthCity()
	p = nil
	p.GetBirthCity()
}

func TestPlayer_GetBirthCountry(tt *testing.T) {
	var zeroValue string
	p := &Player{BirthCountry: &zeroValue}
	p.GetBirthCountry()
	p = &Player{}
	p.GetBirthCountry()
	p = nil
	p.GetBirthCountry()
}

func TestPlayer_GetBirthDate(tt *testing.T) {
	var zeroValue string
	p := &Player{BirthDate: &zeroValue}
	p.GetBirthDate()
	p = &Player{}
	p.GetBirthDate()
	p = nil
	p.GetBirthDate()
}

func TestPlayer_GetBirthStateProvince(tt *testing.T) {
	p := &Player{}
	p.GetBirthStateProvince()
	p = nil
	p.GetBirthStateProvince()
}

func TestPlayer_GetCareerTotals(tt *testing.T) {
	p := &Player{}
	p.GetCareerTotals()
	p = nil
	p.GetCareerTotals()
}

func TestPlayer_GetCurrentTeamAbbrev(tt *testing.T) {
	var zeroValue string
	p := &Player{CurrentTeamAbbrev: &zeroValue}
	p.GetCurrentTeamAbbrev()
	p = &Player{}
	p.GetCurrentTeamAbbrev()
	p = nil
	p.GetCurrentTeamAbbrev()
}

func TestPlayer_GetCurrentTeamId(tt *testing.T) {
	var zeroValue int
	p := &Player{CurrentTeamId: &zeroValue}
	p.GetCurrentTeamId()
	p = &Player{}
	p.GetCurrentTeamId()
	p = nil
	p.GetCurrentTeamId()
}

func TestPlayer_GetDraftDetails(tt *testing.T) {
	p := &Player{}
	p.GetDraftDetails()
	p = nil
	p.GetDraftDetails()
}

func TestPlayer_GetFeaturedStats(tt *testing.T) {
	p := &Player{}
	p.GetFeaturedStats()
	p = nil
	p.GetFeaturedStats()
}

func TestPlayer_GetFirstName(tt *testing.T) {
	p := &Player{}
	p.GetFirstName()
	p = nil
	p.GetFirstName()
}

func TestPlayer_GetFullTeamName(tt *testing.T) {
	p := &Player{}
	p.GetFullTeamName()
	p = nil
	p.GetFullTeamName()
}

func TestPlayer_GetHeadshot(tt *testing.T) {
	var zeroValue string
	p := &Player{Headshot: &zeroValue}
	p.GetHeadshot()
	p = &Player{}
	p.GetHeadshot()
	p = nil
	p.GetHeadshot()
}

func TestPlayer_GetHeightInCentimeters(tt *testing.T) {
	var zeroValue int
	p := &Player{HeightInCentimeters: &zeroValue}
	p.GetHeightInCentimeters()
	p = &Player{}
	p.GetHeightInCentimeters()
	p = nil
	p.GetHeightInCentimeters()
}

func TestPlayer_GetHeightInInches(tt *testing.T) {
	var zeroValue int
	p := &Player{HeightInInches: &zeroValue}
	p.GetHeightInInches()
	p = &Player{}
	p.GetHeightInInches()
	p = nil
	p.GetHeightInInches()
}

func TestPlayer_GetHeroImage(tt *testing.T) {
	var zeroValue string
	p := &Player{HeroImage: &zeroValue}
	p.GetHeroImage()
	p = &Player{}
	p.GetHeroImage()
	p = nil
	p.GetHeroImage()
}

func TestPlayer_GetInHHOF(tt *testing.T) {
	var zeroValue int
	p := &Player{InHHOF: &zeroValue}
	p.GetInHHOF()
	p = &Player{}
	p.GetInHHOF()
	p = nil
	p.GetInHHOF()
}

func TestPlayer_GetInTop100AllTime(tt *testing.T) {
	var zeroValue int
	p := &Player{InTop100AllTime: &zeroValue}
	p.GetInTop100AllTime()
	p = &Player{}
	p.GetInTop100AllTime()
	p = nil
	p.GetInTop100AllTime()
}

func TestPlayer_GetIsActive(tt *testing.T) {
	var zeroValue bool
	p := &Player{IsActive: &zeroValue}
	p.GetIsActive()
	p = &Player{}
	p.GetIsActive()
	p = nil
	p.GetIsActive()
}

func TestPlayer_GetLastName(tt *testing.T) {
	p := &Player{}
	p.GetLastName()
	p = nil
	p.GetLastName()
}

func TestPlayer_GetPlayerID(tt *testing.T) {
	var zeroValue int
	p := &Player{PlayerID: &zeroValue}
	p.GetPlayerID()
	p = &Player{}
	p.GetPlayerID()
	p = nil
	p.GetPlayerID()
}

func TestPlayer_GetPlayerSlug(tt *testing.T) {
	var zeroValue string
	p := &Player{PlayerSlug: &zeroValue}
	p.GetPlayerSlug()
	p = &Player{}
	p.GetPlayerSlug()
	p = nil
	p.GetPlayerSlug()
}

func TestPlayer_GetPosition(tt *testing.T) {
	var zeroValue string
	p := &Player{Position: &zeroValue}
	p.GetPosition()
	p = &Player{}
	p.GetPosition()
	p = nil
	p.GetPosition()
}

func TestPlayer_GetShootsCatches(tt *testing.T) {
	var zeroValue string
	p := &Player{ShootsCatches: &zeroValue}
	p.GetShootsCatches()
	p = &Player{}
	p.GetShootsCatches()
	p = nil
	p.GetShootsCatches()
}

func TestPlayer_GetShopLink(tt *testing.T) {
	var zeroValue string
	p := &Player{ShopLink: &zeroValue}
	p.GetShopLink()
	p = &Player{}
	p.GetShopLink()
	p = nil
	p.GetShopLink()
}

func TestPlayer_GetSweaterNumber(tt *testing.T) {
	var zeroValue int
	p := &Player{SweaterNumber: &zeroValue}
	p.GetSweaterNumber()
	p = &Player{}
	p.GetSweaterNumber()
	p = nil
	p.GetSweaterNumber()
}

func TestPlayer_GetTeamLogo(tt *testing.T) {
	var zeroValue string
	p := &Player{TeamLogo: &zeroValue}
	p.GetTeamLogo()
	p = &Player{}
	p.GetTeamLogo()
	p = nil
	p.GetTeamLogo()
}

func TestPlayer_GetTwitterLink(tt *testing.T) {
	var zeroValue string
	p := &Player{TwitterLink: &zeroValue}
	p.GetTwitterLink()
	p = &Player{}
	p.GetTwitterLink()
	p = nil
	p.GetTwitterLink()
}

func TestPlayer_GetWatchLink(tt *testing.T) {
	var zeroValue string
	p := &Player{WatchLink: &zeroValue}
	p.GetWatchLink()
	p = &Player{}
	p.GetWatchLink()
	p = nil
	p.GetWatchLink()
}

func TestPlayer_GetWeightInKilograms(tt *testing.T) {
	var zeroValue int
	p := &Player{WeightInKilograms: &zeroValue}
	p.GetWeightInKilograms()
	p = &Player{}
	p.GetWeightInKilograms()
	p = nil
	p.GetWeightInKilograms()
}

func TestPlayer_GetWeightInPounds(tt *testing.T) {
	var zeroValue int
	p := &Player{WeightInPounds: &zeroValue}
	p.GetWeightInPounds()
	p = &Player{}
	p.GetWeightInPounds()
	p = nil
	p.GetWeightInPounds()
}

func TestPlayer_BirthCity_GetDefault(tt *testing.T) {
	var zeroValue string
	p := &Player_BirthCity{Default: &zeroValue}
	p.GetDefault()
	p = &Player_BirthCity{}
	p.GetDefault()
	p = nil
	p.GetDefault()
}

func TestPlayer_BirthStateProvince_GetDefault(tt *testing.T) {
	var zeroValue string
	p := &Player_BirthStateProvince{Default: &zeroValue}
	p.GetDefault()
	p = &Player_BirthStateProvince{}
	p.GetDefault()
	p = nil
	p.GetDefault()
}

func TestPlayer_CareerTotals_GetPlayoffs(tt *testing.T) {
	p := &Player_CareerTotals{}
	p.GetPlayoffs()
	p = nil
	p.GetPlayoffs()
}

func TestPlayer_CareerTotals_GetRegularSeason(tt *testing.T) {
	p := &Player_CareerTotals{}
	p.GetRegularSeason()
	p = nil
	p.GetRegularSeason()
}

func TestPlayer_DraftDetails_GetOverallPick(tt *testing.T) {
	var zeroValue int
	p := &Player_DraftDetails{OverallPick: &zeroValue}
	p.GetOverallPick()
	p = &Player_DraftDetails{}
	p.GetOverallPick()
	p = nil
	p.GetOverallPick()
}

func TestPlayer_DraftDetails_GetPickInRound(tt *testing.T) {
	var zeroValue int
	p := &Player_DraftDetails{PickInRound: &zeroValue}
	p.GetPickInRound()
	p = &Player_DraftDetails{}
	p.GetPickInRound()
	p = nil
	p.GetPickInRound()
}

func TestPlayer_DraftDetails_GetRound(tt *testing.T) {
	var zeroValue int
	p := &Player_DraftDetails{Round: &zeroValue}
	p.GetRound()
	p = &Player_DraftDetails{}
	p.GetRound()
	p = nil
	p.GetRound()
}

func TestPlayer_DraftDetails_GetTeamAbbrev(tt *testing.T) {
	var zeroValue string
	p := &Player_DraftDetails{TeamAbbrev: &zeroValue}
	p.GetTeamAbbrev()
	p = &Player_DraftDetails{}
	p.GetTeamAbbrev()
	p = nil
	p.GetTeamAbbrev()
}

func TestPlayer_DraftDetails_GetYear(tt *testing.T) {
	var zeroValue int
	p := &Player_DraftDetails{Year: &zeroValue}
	p.GetYear()
	p = &Player_DraftDetails{}
	p.GetYear()
	p = nil
	p.GetYear()
}

func TestPlayer_FeaturedStats_GetPlayoffs(tt *testing.T) {
	p := &Player_FeaturedStats{}
	p.GetPlayoffs()
	p = nil
	p.GetPlayoffs()
}

func TestPlayer_FeaturedStats_GetRegularSesason(tt *testing.T) {
	p := &Player_FeaturedStats{}
	p.GetRegularSesason()
	p = nil
	p.GetRegularSesason()
}

func TestPlayer_FeaturedStats_GetSeason(tt *testing.T) {
	var zeroValue int
	p := &Player_FeaturedStats{Season: &zeroValue}
	p.GetSeason()
	p = &Player_FeaturedStats{}
	p.GetSeason()
	p = nil
	p.GetSeason()
}

func TestPlayer_FeaturedTotals_GetCareer(tt *testing.T) {
	p := &Player_FeaturedTotals{}
	p.GetCareer()
	p = nil
	p.GetCareer()
}

func TestPlayer_FeaturedTotals_GetSubSeason(tt *testing.T) {
	p := &Player_FeaturedTotals{}
	p.GetSubSeason()
	p = nil
	p.GetSubSeason()
}

func TestPlayer_FirstName_GetDefault(tt *testing.T) {
	var zeroValue string
	p := &Player_FirstName{Default: &zeroValue}
	p.GetDefault()
	p = &Player_FirstName{}
	p.GetDefault()
	p = nil
	p.GetDefault()
}

func TestPlayer_FullTeamName_GetCS(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{CS: &zeroValue}
	p.GetCS()
	p = &Player_FullTeamName{}
	p.GetCS()
	p = nil
	p.GetCS()
}

func TestPlayer_FullTeamName_GetDE(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{DE: &zeroValue}
	p.GetDE()
	p = &Player_FullTeamName{}
	p.GetDE()
	p = nil
	p.GetDE()
}

func TestPlayer_FullTeamName_GetDefault(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{Default: &zeroValue}
	p.GetDefault()
	p = &Player_FullTeamName{}
	p.GetDefault()
	p = nil
	p.GetDefault()
}

func TestPlayer_FullTeamName_GetFI(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{FI: &zeroValue}
	p.GetFI()
	p = &Player_FullTeamName{}
	p.GetFI()
	p = nil
	p.GetFI()
}

func TestPlayer_FullTeamName_GetFR(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{FR: &zeroValue}
	p.GetFR()
	p = &Player_FullTeamName{}
	p.GetFR()
	p = nil
	p.GetFR()
}

func TestPlayer_FullTeamName_GetSK(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{SK: &zeroValue}
	p.GetSK()
	p = &Player_FullTeamName{}
	p.GetSK()
	p = nil
	p.GetSK()
}

func TestPlayer_FullTeamName_GetSV(tt *testing.T) {
	var zeroValue string
	p := &Player_FullTeamName{SV: &zeroValue}
	p.GetSV()
	p = &Player_FullTeamName{}
	p.GetSV()
	p = nil
	p.GetSV()
}

func TestPlayer_LastName_GetDefault(tt *testing.T) {
	var zeroValue string
	p := &Player_LastName{Default: &zeroValue}
	p.GetDefault()
	p = &Player_LastName{}
	p.GetDefault()
	p = nil
	p.GetDefault()
}

func TestPlayer_Total_GetAssists(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Assists: &zeroValue}
	p.GetAssists()
	p = &Player_Total{}
	p.GetAssists()
	p = nil
	p.GetAssists()
}

func TestPlayer_Total_GetAvgToi(tt *testing.T) {
	var zeroValue string
	p := &Player_Total{AvgToi: &zeroValue}
	p.GetAvgToi()
	p = &Player_Total{}
	p.GetAvgToi()
	p = nil
	p.GetAvgToi()
}

func TestPlayer_Total_GetFaceoffWinningPctg(tt *testing.T) {
	p := &Player_Total{}
	p.GetFaceoffWinningPctg()
	p = nil
	p.GetFaceoffWinningPctg()
}

func TestPlayer_Total_GetGamesPlayed(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{GamesPlayed: &zeroValue}
	p.GetGamesPlayed()
	p = &Player_Total{}
	p.GetGamesPlayed()
	p = nil
	p.GetGamesPlayed()
}

func TestPlayer_Total_GetGameTypeId(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{GameTypeId: &zeroValue}
	p.GetGameTypeId()
	p = &Player_Total{}
	p.GetGameTypeId()
	p = nil
	p.GetGameTypeId()
}

func TestPlayer_Total_GetGameWinningGoals(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{GameWinningGoals: &zeroValue}
	p.GetGameWinningGoals()
	p = &Player_Total{}
	p.GetGameWinningGoals()
	p = nil
	p.GetGameWinningGoals()
}

func TestPlayer_Total_GetGoals(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Goals: &zeroValue}
	p.GetGoals()
	p = &Player_Total{}
	p.GetGoals()
	p = nil
	p.GetGoals()
}

func TestPlayer_Total_GetLeagueAbbrev(tt *testing.T) {
	var zeroValue string
	p := &Player_Total{LeagueAbbrev: &zeroValue}
	p.GetLeagueAbbrev()
	p = &Player_Total{}
	p.GetLeagueAbbrev()
	p = nil
	p.GetLeagueAbbrev()
}

func TestPlayer_Total_GetOTGoals(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{OTGoals: &zeroValue}
	p.GetOTGoals()
	p = &Player_Total{}
	p.GetOTGoals()
	p = nil
	p.GetOTGoals()
}

func TestPlayer_Total_GetPIM(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{PIM: &zeroValue}
	p.GetPIM()
	p = &Player_Total{}
	p.GetPIM()
	p = nil
	p.GetPIM()
}

func TestPlayer_Total_GetPlusMinus(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{PlusMinus: &zeroValue}
	p.GetPlusMinus()
	p = &Player_Total{}
	p.GetPlusMinus()
	p = nil
	p.GetPlusMinus()
}

func TestPlayer_Total_GetPoints(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Points: &zeroValue}
	p.GetPoints()
	p = &Player_Total{}
	p.GetPoints()
	p = nil
	p.GetPoints()
}

func TestPlayer_Total_GetPowerPlayGoals(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{PowerPlayGoals: &zeroValue}
	p.GetPowerPlayGoals()
	p = &Player_Total{}
	p.GetPowerPlayGoals()
	p = nil
	p.GetPowerPlayGoals()
}

func TestPlayer_Total_GetPowerPlayPoints(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{PowerPlayPoints: &zeroValue}
	p.GetPowerPlayPoints()
	p = &Player_Total{}
	p.GetPowerPlayPoints()
	p = nil
	p.GetPowerPlayPoints()
}

func TestPlayer_Total_GetSeason(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Season: &zeroValue}
	p.GetSeason()
	p = &Player_Total{}
	p.GetSeason()
	p = nil
	p.GetSeason()
}

func TestPlayer_Total_GetSequence(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Sequence: &zeroValue}
	p.GetSequence()
	p = &Player_Total{}
	p.GetSequence()
	p = nil
	p.GetSequence()
}

func TestPlayer_Total_GetShootingPctg(tt *testing.T) {
	p := &Player_Total{}
	p.GetShootingPctg()
	p = nil
	p.GetShootingPctg()
}

func TestPlayer_Total_GetShorthandedGoals(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{ShorthandedGoals: &zeroValue}
	p.GetShorthandedGoals()
	p = &Player_Total{}
	p.GetShorthandedGoals()
	p = nil
	p.GetShorthandedGoals()
}

func TestPlayer_Total_GetShorthandedPoints(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{ShorthandedPoints: &zeroValue}
	p.GetShorthandedPoints()
	p = &Player_Total{}
	p.GetShorthandedPoints()
	p = nil
	p.GetShorthandedPoints()
}

func TestPlayer_Total_GetShots(tt *testing.T) {
	var zeroValue int
	p := &Player_Total{Shots: &zeroValue}
	p.GetShots()
	p = &Player_Total{}
	p.GetShots()
	p = nil
	p.GetShots()
}

func TestPlayer_Total_GetTeamName(tt *testing.T) {
	p := &Player_Total{}
	p.GetTeamName()
	p = nil
	p.GetTeamName()
}
